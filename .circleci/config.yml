version: 2.1

jobs:
  code-quality:
    docker:
      - image: cimg/rust:1.86.0
    steps:
      - checkout
      - run:
          name: Install rustfmt and clippy
          command: |
            rustup component add rustfmt
            rustup component add clippy
      - run:
          name: Check formatting
          command: cargo fmt -- --check
      - run:
          name: Run clippy
          command: cargo clippy -- -D warnings

  test:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o docker-compose
            chmod +x docker-compose
            sudo mv docker-compose /usr/local/bin/
      - run:
          name: Run tests
          command: |
            docker-compose build test
            docker-compose run --rm test

  publish:
    docker:
      - image: cimg/rust:1.86.0
    steps:
      - checkout
      - run:
          name: Install cargo-audit
          command: cargo install cargo-audit
      - run:
          name: Check dependencies for security vulnerabilities
          command: cargo audit
      - run:
          name: Build documentation
          command: cargo doc --no-deps
      - run:
          name: Verify package
          command: |
            cargo package
            cargo package --list
      - run:
          name: Publish to crates.io
          command: |
            echo "Publishing version $(grep -oP 'version = "\K[^"]+' Cargo.toml)"
            cargo publish --token ${CRATES_IO_TOKEN} --dry-run
      - run:
          name: Create git tag
          command: |
            VERSION="v$(grep -oP 'version = "\K[^"]+' Cargo.toml)"
            git config user.email "armhamos@gmail.com"
            git config user.name "arm-cci"
            git tag -a "${VERSION}" -m "Release ${VERSION}"
            git push origin "${VERSION}"

workflows:
  version: 2
  build_test_publish:
    jobs:
      - code-quality
      - test:
          requires:
            - code-quality
      - publish:
          context: crates-io-publish-context
          requires:
            - test
          # filters:
          #   branches:
          #     only: master
